name: Terraform Module Test
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-modue:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: test/github
    env:
      TF_CLOUD_HOSTNAME: ${{vars.TF_CLOUD_HOSTNAME}}
      TF_CLOUD_ORGANIZATION: ${{vars.TF_CLOUD_ORGANIZATION}}
      TF_WORKSPACE: ${{vars.TF_WORKSPACE}}
      TF_VAR_token: ${{vars.TFE_TOKEN}}
      TF_TOKEN_app_terraform_io: "OPeQEUHt8kSLtQ.atlasv1.zQC78LxKf4y0hdSxZvL59OXtv6vjX2RTgx3PC8xuRWgyMt2apPx1HwLep4E4d6AHdGM"
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name : Terraform Format
        id: fmt   
        run: |
          terraform fmt -recursive -check

      - name: Terraform Init
        id: init
        run: |
          terraform init -input=false

      - name: Terraform Validate  
        id: validate
        run: |
          terraform validate -no-color

      - name: Terraform Plan
        id: plan
        continue-on-error: true
        run: |
          terraform plan -no-color -input=false

      - name: Reformat Plan
        run: |
          echo '${{ steps.plan.outputs.stdout || steps.plan.outputs.stderr }}' \
          | sed -E 's/^([[:space:]]+)([-+])/\2\1/g' > plan.txt

      - name: Plan in Env Variable
        run: |
          PLAN=$(cat plan.txt)
          echo "PLAN<<EOF" >> $GITHUB_ENV
          echo "$PLAN" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Post Plan to GitHub PR
        uses: mfakhtar/add-pr-comment@v2
        env:
          PLAN_OP: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          message: |
            #### Terraform Format and Style `${{ steps.fmt.outcome }}`
            #### Terraform Initialization `${{ steps.init.outcome }}`
            #### Terraform Validation `${{ steps.validate.outcome }}`

            <details><summary>Validation Output</summary>

            ```diff
            ${{ steps.validate.outputs.stdout }}
            ```
            </details>

            #### Terraform Plan `${{ steps.plan.outcome }}`

            <details><summary>Show Plan</summary>

            ```diff
            ${{ env.PLAN }}
            ```
            </details>

            *Pusher: @${{ github.actor }}, Action: `${{ github.event_name }}`, Working Directory: `${{ matrix.path }}`, Workflow: `${{ github.workflow }}`*
            
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Inform on PR that Apply is Running
        if: github.ref == 'refs/heads/master' && github.event_name == 'push' && steps.plan.outcome == 'success'
        uses: mfakhtar/add-pr-comment@v2
        with:
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          message: |
            ***Running terraform apply***
            Terraform Apply Outputs will display here in few seconds...
            
      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push' && steps.plan.outcome == 'success'
        id: apply
        continue-on-error: true
        run: |
          cd application/${{ matrix.path }}
          terraform apply -input=false --auto-approve

      - name: Post Terraform Apply to GitHub PR
        if: steps.plan.outcome == 'success' && steps.apply.outcome == 'success'
        uses: mfakhtar/add-pr-comment@v2
        with:
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          message: |
            Terraform Applying **${{ matrix.path }}**:

            #### Terraform Apply `${{ steps.apply.outcome }}`

            <details><summary>Show Terraform Apply Outputs</summary>

            ```diff
            ${{ steps.apply.outputs.stdout }}
            ```

            </details>

      - name: Post Plan Failure
        if: steps.plan.outcome == 'failure'
        uses: mfakhtar/add-pr-comment@v2
        with:
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          message: |
            Plan failed for **${{ matrix.path }}**:

            <details><summary>Show Terraform Plan Failure</summary>

            ```diff
            ${{ steps.plan.outputs.stderr }}
            ```

            </details>

      - name: Post Apply Failure
        if: steps.apply.outcome == 'failure'
        uses: mfakhtar/add-pr-comment@v2
        with:
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          message: |
            Apply failed for **${{ matrix.path }}**:

            <details><summary>Show Terraform Plan Failure</summary>

            ```diff
            ${{ steps.apply.outputs.stderr }}
            ```
            
            </details>
